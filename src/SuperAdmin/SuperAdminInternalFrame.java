/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SuperAdmin;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import loginpages.Login;
import loginpages.baglanti;

/**
 *
 * @author Administrator
 */
public class SuperAdminInternalFrame extends javax.swing.JInternalFrame {

    public Connection conn = null;
    public PreparedStatement pst = null;
    public ResultSet rs = null;
    public ArrayList<String> list = new ArrayList<>();
    public ArrayList<String> adminList = new ArrayList<>();
    public String ad;
    public String soyAd;
    //public AdminDuzenle duzenlenen = null;
    public boolean durum = false;

    private static final DateFormat tarihFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
    public static final String ADMINBUL = "SELECT * FROM user WHERE yetki = 5 ";
    //public static final String ADMINSIL ="DELETE * FROM user WHERE sicil =?";
    private PreparedStatement pst2;

    public SuperAdminInternalFrame() throws ClassNotFoundException, SQLException {
        initComponents();
        birimleriYukle();
    }

    private void ortala() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;
        this.setLocation(x, y);
    }

    private void birimleriYukle() throws ClassNotFoundException, SQLException {
        try {
            conn = baglanti.baglan();
            pst = conn.prepareStatement(ADMINBUL);
            rs = pst.executeQuery();
            while (rs.next()) {
                list.add(rs.getString("sicil") + "-- " + rs.getString("ad") + " " + rs.getString("soyad") + "  >  " + rs.getString("durum"));
                adminList.add(rs.getString("sicil"));
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        ListModel ls = new AbstractListModel() {

            @Override
            public int getSize() {
                return list.size();
            }

            @Override
            public Object getElementAt(int index) {
                return list.get(index);
            }
        };
        adminListe.setModel(ls);
        adminListe.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioButonu = new javax.swing.ButtonGroup();
        solPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        adminListe = new javax.swing.JList();
        duzenle = new javax.swing.JButton();
        sil = new javax.swing.JButton();
        Ekle = new javax.swing.JButton();
        sagPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        sagPanelAd = new javax.swing.JTextField();
        sagPanelSoyAd = new javax.swing.JTextField();
        sagPanelSicil = new javax.swing.JTextField();
        sagPanelSifre = new javax.swing.JTextField();
        aktifRadioButton = new javax.swing.JRadioButton();
        pasifRadioButton = new javax.swing.JRadioButton();
        sagPanelKaydet = new javax.swing.JButton();
        ayarla = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Admin Paneli");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        solPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        solPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        solPanel.setName("adminler"); // NOI18N

        adminListe.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        adminListe.setToolTipText("");
        adminListe.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        adminListe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminListeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(adminListe);

        duzenle.setText("Düzenle");
        duzenle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duzenleActionPerformed(evt);
            }
        });

        sil.setText("Sil");
        sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silActionPerformed(evt);
            }
        });

        Ekle.setText("Ekle");
        Ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EkleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout solPanelLayout = new javax.swing.GroupLayout(solPanel);
        solPanel.setLayout(solPanelLayout);
        solPanelLayout.setHorizontalGroup(
            solPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(solPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(solPanelLayout.createSequentialGroup()
                        .addGroup(solPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(duzenle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(Ekle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        solPanelLayout.setVerticalGroup(
            solPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solPanelLayout.createSequentialGroup()
                .addGroup(solPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(solPanelLayout.createSequentialGroup()
                        .addComponent(duzenle)
                        .addGap(18, 18, 18)
                        .addComponent(sil)
                        .addGap(18, 18, 18)
                        .addComponent(Ekle))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 16, Short.MAX_VALUE))
        );

        sagPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sagPanel.setOpaque(false);

        jLabel3.setText("Ad");

        jLabel4.setText("Soyad");

        jLabel5.setText("Sicil");

        jLabel6.setText("Şifre");

        jLabel7.setText("Durumu");

        sagPanelAd.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        sagPanelAd.setEnabled(false);

        sagPanelSoyAd.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        sagPanelSoyAd.setEnabled(false);

        sagPanelSicil.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        sagPanelSicil.setEnabled(false);

        sagPanelSifre.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        sagPanelSifre.setEnabled(false);

        radioButonu.add(aktifRadioButton);
        aktifRadioButton.setSelected(true);
        aktifRadioButton.setText("Aktif");

        radioButonu.add(pasifRadioButton);
        pasifRadioButton.setText("Pasif");

        sagPanelKaydet.setText("Kaydet");
        sagPanelKaydet.setEnabled(false);
        sagPanelKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sagPanelKaydetActionPerformed(evt);
            }
        });

        ayarla.setText("Ayarla");
        ayarla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayarlaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sagPanelLayout = new javax.swing.GroupLayout(sagPanel);
        sagPanel.setLayout(sagPanelLayout);
        sagPanelLayout.setHorizontalGroup(
            sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sagPanelLayout.createSequentialGroup()
                .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sagPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(24, 24, 24)
                        .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sagPanelLayout.createSequentialGroup()
                                .addComponent(aktifRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pasifRadioButton))
                            .addGroup(sagPanelLayout.createSequentialGroup()
                                .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sagPanelAd)
                                    .addComponent(sagPanelSoyAd)
                                    .addComponent(sagPanelSicil)
                                    .addComponent(sagPanelSifre, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                                .addGap(42, 42, 42)
                                .addComponent(sagPanelKaydet))))
                    .addGroup(sagPanelLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(ayarla)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        sagPanelLayout.setVerticalGroup(
            sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sagPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sagPanelAd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sagPanelKaydet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sagPanelSoyAd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sagPanelSicil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(sagPanelSifre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(sagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(aktifRadioButton)
                        .addComponent(pasifRadioButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ayarla)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Dosya");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("İstatistikler");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Hakkında");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(solPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sagPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(solPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sagPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silActionPerformed

        componentDuzenle(false);
        ayarla.setEnabled(false);
        Integer secilen = adminListe.getSelectedIndex();

        if (secilen == -1) {
            hatamesaj("Sol Menüden Birim Seçin!!");
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Seşilen Admin Silinecek Emin misiniz?", "Sil", dialogButton);
            if (dialogResult == 0) {

                try {
                    conn = baglanti.baglan();

                    String silinecekAdmin = "DELETE FROM user WHERE sicil ='" + adminList.get(secilen) + "'";

                    pst = conn.prepareStatement(silinecekAdmin);
                    pst.executeUpdate();
                    list.clear();
                    adminList.clear();
                    birimleriYukle();
                    conn.close();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                //ADMIN SILINMIYOR

            }

        }
    }//GEN-LAST:event_silActionPerformed

    private void EkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EkleActionPerformed

        componentReset();
        componentDuzenle(true);
        sagPanelKaydet.setText("Yeni Admin Kaydet");
        ayarla.setEnabled(false);


    }//GEN-LAST:event_EkleActionPerformed

    private void duzenleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duzenleActionPerformed
        componentDuzenle(true);

//        Integer secilen = adminListe.getSelectedIndex();
//        duzenlenen = null;
//        
//        try {
//            String sicil = adminList.get(secilen);
//            duzenlenen = new AdminDuzenle();
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex){
//            Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//        duzenlenen.setVisible(true);
//        list.clear();
//        adminList.clear();
//        try {
//            birimleriYukle();
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        

    }//GEN-LAST:event_duzenleActionPerformed

    private void adminListeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminListeMouseClicked

        ayarla.setEnabled(true);
        sagPanelKaydet.setText("Kaydet");
        try {
            componentDuzenle(false);
            Integer secilen = adminListe.getSelectedIndex();
            String listelenenAdmin = "SELECT * FROM user WHERE sicil ='" + adminList.get(secilen) + "'";
            conn = baglanti.baglan();
            pst = conn.prepareStatement(listelenenAdmin);
            rs = pst.executeQuery();
            while (rs.next()) {
                sagPanelAd.setText(rs.getString("ad"));
                sagPanelSoyAd.setText(rs.getString("soyad"));
                sagPanelSicil.setText(rs.getString("sicil"));
                sagPanelSifre.setText(rs.getString("password"));
                if (rs.getString("durum").equals("Pasif")) {
                    pasifRadioButton.setSelected(true);
                } else {
                    aktifRadioButton.setSelected(true);
                }

            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adminListeMouseClicked

    private void sagPanelKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sagPanelKaydetActionPerformed

        if (sagPanelKaydet.getText().equals("Kaydet")) {
            try {
                String durumu = null;
                if (aktifRadioButton.isSelected()) {
                    durumu = "Aktif";
                } else {
                    durumu = "Pasif";
                }
                Integer secilen = adminListe.getSelectedIndex();
                String eklenecekAdmin = adminList.get(secilen);
                int yetki, gorev;
                yetki = 5;
                gorev = 1;
                String adminSQL = "UPDATE user SET "
                        + "sicil =UPPER('" + sagPanelSicil.getText().replace(" ", "") + "')"
                        + ",password = '" + sagPanelSifre.getText() + "'"
                        + ",ad    ='" + sagPanelAd.getText().replace(" ", "") + "'"
                        + ",soyad ='" + sagPanelSoyAd.getText().replace(" ", "") + "'"
                        + ",yetki ='" + yetki + "'"
                        + ",gorev ='" + gorev + "'"
                        + ",durum ='" + durumu + "'"
                        + ",tarih ='" + tarihGetir() + "'"
                        + "WHERE sicil ='" + eklenecekAdmin + "'";
                conn = baglanti.baglan();
                pst = conn.prepareStatement(adminSQL);

                if (sagPanelAd.getText().isEmpty() || sagPanelSoyAd.getText().isEmpty() || sagPanelSicil.getText().isEmpty() || sagPanelSifre.getText().isEmpty()) {
                    hatamesaj("BOŞ ALAN BIRAKMAYINIZ!!");
                } else {
                    pst.executeUpdate();
                    hatamesaj("KAYIT BAŞARILI!!");

                    list.clear();
                    adminList.clear();
                    try {
                        birimleriYukle();
                        componentDuzenle(false);
                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }

            } catch (SQLException ex) {
                Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    conn.close();
                    rs = null;
                    pst = null;

                } catch (SQLException ex) {
                    Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {//YENİ ADMİN KAYDETME DURUMU

            String adminAdi, adminSoyadi, sicili, duzenlenenSicil, adminSifre, personelDurumu;
            adminAdi = sagPanelAd.getText().replace(" ", "");
            adminSoyadi = sagPanelSoyAd.getText().replace(" ", "");
            sicili = sagPanelSicil.getText().replace(" ", "");
            adminSifre = sagPanelSifre.getText();
            if (aktifRadioButton.isSelected()) {
                personelDurumu = "Aktif";
            } else {
                personelDurumu = "Pasif";
            }
            int yetki = 5;
            int gorev = 1;
            String adminSQL = "INSERT INTO user (sicil, password, ad, soyad, yetki, gorev, durum, tarih) "
                    + "VALUES (UPPER('" + sicili + "'),'" + adminSifre + "','" + adminAdi + "',"
                    + "'" + adminSoyadi + "',"
                    + "'" + yetki + "','" + gorev + "','" + personelDurumu + "','" + tarihGetir() + "')";

            String uyeVarmiSQL = "SELECT * FROM user WHERE sicil ='" + sagPanelSicil.getText() + "'";

            if (adminAdi.isEmpty() || adminSoyadi.isEmpty() || sicili.isEmpty() || adminSifre.isEmpty()) {
                hatamesaj("BOŞ ALAN BIRAKMAYINIZ!!");
            } else {
                try {
                    conn = baglanti.baglan();
                    pst2 = conn.prepareStatement(uyeVarmiSQL);
                    rs = pst2.executeQuery();
                    if (rs.next()) {
                        hatamesaj("BU SİCİL İLE DAHA ÖNCEDEN KAYIT YAPILMIŞ ");
                        conn.close();
                        pst2 = null;

                    } else {

                        try {
                            conn = baglanti.baglan();
                            pst = conn.prepareStatement(adminSQL);
                            pst.executeUpdate();
                        } catch (SQLException | ClassNotFoundException ex) {
                            Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                        } finally {
                            try {
                                list.clear();
                                adminList.clear();
                                birimleriYukle();
                                componentDuzenle(false);
                                conn.close();
                                pst = null;
                                pst2 = null;
                                hatamesaj("ADMİN KAYDI YAPILMIŞTIR!!");

                                sagPanelAd.setText("");
                                sagPanelSoyAd.setText("");
                                sagPanelSicil.setText("");
                                sagPanelSifre.setText("");

                            } catch (SQLException ex) {
                                Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_sagPanelKaydetActionPerformed


    private void ayarlaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayarlaActionPerformed
        try {
            String durumu = null;
            if (aktifRadioButton.isSelected()) {
                durumu = "Aktif";
            } else {
                durumu = "Pasif";
            }

            Integer secilen = adminListe.getSelectedIndex();
            String pasifAdmin = adminList.get(secilen);
            String pasifAdminSQL = "UPDATE user SET durum = '" + durumu + "' WHERE sicil ='" + pasifAdmin + "'";
            conn = baglanti.baglan();
            pst = conn.prepareStatement(pasifAdminSQL);
            pst.executeUpdate();
            ayarla.setEnabled(false);
            list.clear();
            adminList.clear();
            try {
                birimleriYukle();
            } catch (    ClassNotFoundException | SQLException ex) {
                Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(SuperAdminInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_ayarlaActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
////        <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        </editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new AdminForm().setVisible(true);
//                } catch (ClassNotFoundException ex) {
//                    Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (SQLException ex) {
//                    Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ekle;
    private javax.swing.JList adminListe;
    private javax.swing.JRadioButton aktifRadioButton;
    private javax.swing.JButton ayarla;
    private javax.swing.JButton duzenle;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton pasifRadioButton;
    private javax.swing.ButtonGroup radioButonu;
    private javax.swing.JPanel sagPanel;
    private javax.swing.JTextField sagPanelAd;
    private javax.swing.JButton sagPanelKaydet;
    private javax.swing.JTextField sagPanelSicil;
    private javax.swing.JTextField sagPanelSifre;
    private javax.swing.JTextField sagPanelSoyAd;
    private javax.swing.JButton sil;
    private javax.swing.JPanel solPanel;
    // End of variables declaration//GEN-END:variables

    private void hatamesaj(String hata) {
        JOptionPane.showMessageDialog(this, hata);
    }

    private void componentDuzenle(Boolean durum) {
        if (durum) {
            sagPanelAd.setEnabled(true);
            sagPanelSoyAd.setEnabled(true);
            sagPanelSicil.setEnabled(true);
            sagPanelSifre.setEnabled(true);
            sagPanelKaydet.setEnabled(true);

        } else {
            sagPanelAd.setEnabled(false);
            sagPanelSoyAd.setEnabled(false);
            sagPanelSicil.setEnabled(false);
            sagPanelSifre.setEnabled(false);
            sagPanelKaydet.setEnabled(false);

        }
    }

    private static String tarihGetir() {
        java.util.Date today = new java.util.Date();
        return tarihFormat.format(today.getTime());
    }

    private void componentReset() {
        sagPanelAd.setText("");
        sagPanelSoyAd.setText("");
        sagPanelSicil.setText("");
        sagPanelSifre.setText("");

    }

}
